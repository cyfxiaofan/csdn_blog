from django.shortcuts import renderfrom django.http import JsonResponsefrom django.contrib.auth.hashers import make_password,check_passwordfrom django.contrib.auth import logout,login,authenticatefrom django.views.decorators.cache import cache_pagefrom django.db.models import Qfrom apps.index import oss_imgfrom django.views.decorators.csrf import csrf_exemptimport time,os,random,iofrom apps.index import modelsimport urllibimport urllib.requestimport jsonimport random# Create your views here.def show(request):	if request.method == 'GET':		return render(request,'login.html')	elif request.method == 'POST':		user = request.POST.dict()		print(user)		yzm = request.session.get('verifycode')		if user['imgCode'].upper() != yzm.upper():			return JsonResponse({"msg": "验证码错误"})		checkuser = models.Users.objects.filter(userid=user['userid'])		if not checkuser:			return JsonResponse({'msg': "账号错误！无此用户"})		else:			checkuser = checkuser[0]		if checkuser.status == 1:			return JsonResponse({"msg": "您已被禁止登陆！"})		userpass = check_password(user['userpwd'], checkuser.password)		if userpass:			request.session["userinfo"] = {'username': checkuser.username, 'userimg': checkuser.head_url,										   'userid': checkuser.id}			print(request.session['userinfo'])			request.session['verifycode'] = ''			return JsonResponse({'msg': 1, 'href': "/",'username':checkuser.username})		else:			return JsonResponse({'msg':'密码错误！'})#验证码def checkma(request):	#引入绘图模块	from PIL import Image, ImageDraw, ImageFont	#引入随机函数模块	import random	#定义变量，用于画面的背景色、宽、高	bgcolor = (random.randrange(200, 255), random.randrange(		200, 255), 237)	width = 100	height = 30	#创建画面对象	im = Image.new('RGB', (width, height), bgcolor)	#创建画笔对象	draw = ImageDraw.Draw(im)	#调用画笔的point()函数绘制噪点	for i in range(0, 100):		xy = (random.randrange(0, width), random.randrange(0, height))		fill = (random.randrange(0, 255), 255, random.randrange(0, 255))		draw.point(xy, fill=fill)	#定义验证码的备选值	str1 = 'ABCD123EFGHIJK456LMNOPQRS789TUVWXYZ0'	#随机选取4个值作为验证码	rand_str = ''	for i in range(0, 4):		rand_str += str1[random.randrange(0, len(str1))]	#构造字体对象	font = ImageFont.truetype('ebrima.ttf', 23)	#构造字体颜色	fontcolor = (255, random.randrange(0, 255), random.randrange(0, 255))	#绘制4个字	draw.text((5, 2), rand_str[0], font=font, fill=fontcolor)	draw.text((25, 2), rand_str[1], font=font, fill=fontcolor)	draw.text((50, 2), rand_str[2], font=font, fill=fontcolor)	draw.text((75, 2), rand_str[3], font=font, fill=fontcolor)	#释放画笔	del draw	#存入session，用于做进一步验证	request.session['verifycode'] = rand_str	buf = io.BytesIO()	# 将图片保存在内存中，文件类型为png	im.save(buf, 'png')	year = time.strftime('%Y', time.localtime(int(time.time())))	month = time.strftime('%m', time.localtime(int(time.time())))	day = time.strftime('%d', time.localtime(int(time.time())))	try:		path = "yzm/" + year + '/' + month + '/' + day + '/'		file_name = path + str(random.randint(1000000, 9999999)) + str(int(time.time()))		# 请求并拼接图片地址		from urllib.request import urljoin		# 阿里云  oss 对图片处理成网络地址		oss_img.oss_func(fileobj=buf.getvalue(), filepath=file_name)		file_name = urljoin('http://jiamengweb.oss-cn-beijing.aliyuncs.com', file_name)	except Exception as e:		file_name = ''		print(e)	return JsonResponse({"msg":file_name})def checkimgyzm(request):	if request.method == 'POST':		user = request.POST.dict()		print(user)		yzm = request.session.get('verifycode')		if user['imgCode'].upper() != yzm.upper():			return JsonResponse({"msg": "验证码错误"})		checkuser = models.Users.objects.filter(phone=user['phone'])		if checkuser:			return JsonResponse({'msg': "该手机号已注册！"})		else:			msg = phonecode(request,user['phone'])			return JsonResponse(msg)def phonecode(request,mobile):	# 用户名 查看用户名请登录用户中心->验证码、通知短信->帐户及签名设置->APIID	account = "C15379569"	# 密码 查看密码请登录用户中心->验证码、通知短信->帐户及签名设置->APIKEY	password = "b71202439b1a0644c68463c016f4694f"	# mobile = request.POST.get('phone')	# 随机验证码	code = str(random.randint(10000, 99999))	print(code)	# 把验证码存入session	request.session['msgcode'] = {'code': code, 'phone': mobile}	# text = "您的验证码是："+code+"。请不要把验证码泄露给其他人。"	# data = {'account': account, 'password' : password, 'content': text, 'mobile':mobile,'format':'json' }	# req = urllib.request.urlopen(	#     url= 'http://106.ihuyi.com/webservice/sms.php?method=Submit',	#     data= urllib.parse.urlencode(data).encode('utf-8')	# )	# content =req.read()	# res = json.loads(content.decode('utf-8'))	# print(res)	# return HttpResponse(res)	# return JsonResponse(res)	return {"msg":1,'code': code}def fphonecode(request,mobile):	# 用户名 查看用户名请登录用户中心->验证码、通知短信->帐户及签名设置->APIID	account = "C15379569"	# 密码 查看密码请登录用户中心->验证码、通知短信->帐户及签名设置->APIKEY	password = "b71202439b1a0644c68463c016f4694f"	# mobile = request.POST.get('phone')	# 随机验证码	code = str(random.randint(10000, 99999))	print(code)	# text = "您的验证码是："+code+"。请不要把验证码泄露给其他人。"	# data = {'account': account, 'password' : password, 'content': text, 'mobile':mobile,'format':'json' }	# req = urllib.request.urlopen(	#     url= 'http://106.ihuyi.com/webservice/sms.php?method=Submit',	#     data= urllib.parse.urlencode(data).encode('utf-8')	# )	# content =req.read()	# res = json.loads(content.decode('utf-8'))	# print(res)	# return HttpResponse(res)	# return JsonResponse(res)	return codedef register(request):	if request.method == 'POST':		registeruser = request.POST.dict()		# request.session['msgcode'] = {'code': code, 'phone': mobile}		verifycode = request.session.get('msgcode')		print(verifycode)		if int(registeruser['phonecode']) != int(verifycode['code']) or registeruser['phone'] != verifycode['phone']:			return JsonResponse({"msg": "验证码错误！"})		check = models.Users.objects.filter(phone=int(registeruser['phone'])).count()		if check:			return JsonResponse({"msg": "该手机号以注册"})		# 获取userid		while True:			userid = str(random.randint(100000, 999999))			this_user = models.Users.objects.filter(userid=userid).count()			if not this_user:				break		try:			user = models.Users(				username='3Q'+str(userid),				userid=userid,				password=make_password(registeruser['userpwd'], None, "pbkdf2_sha256"),				phone=registeruser['phone'],				head_url='https://jiamengweb.oss-cn-beijing.aliyuncs.com/nologin.png',			)			user.save(force_insert=True)			ZL_obj = models.Zhuanlan(				uid=user,				title='默认专栏',			)			ZL_obj.save(force_insert=True)			request.session["userinfo"] = {'username': '3Q'+str(userid),										   'userimg': 'https://jiamengweb.oss-cn-beijing.aliyuncs.com/nologin.png', 'userid': user.id}			return JsonResponse({"msg": 1, 'userinfo':'注册成功！请牢记您的3Q账号 : '+str(userid) })		except Exception as e:			print(e)			return JsonResponse({"msg": "注册失败"})def forgetpwd_1(request):	if request.method == 'GET':		fuserid = request.GET.get('fuserid','')		if not fuserid:			return JsonResponse({'msg':0})		checkuserid = models.Users.objects.filter(userid=fuserid)		if not checkuserid:			return JsonResponse({'msg':0})		else:			mobile_number = checkuserid[0].phone			code = fphonecode(request,mobile_number)			# 把忘记密码的userid 和 phone 存进session			request.session['fmsgcode'] = {'code': code, 'phone': mobile_number,'userid':fuserid}			mobile_number = mobile_number[0:3]+'*'*5+mobile_number[-3:]			return JsonResponse({'msg':1,'phonenumber':mobile_number,'code':code})def forgetpwd_2(request):	if request.method == 'POST':		fphonecode = request.POST.get('fphonecode','')		if not fphonecode:			return JsonResponse({'msg':0})		verifycode = request.session.get('fmsgcode')		print(verifycode)		try:			if int(fphonecode) != int(verifycode['code']):				return JsonResponse({"msg": "验证码错误！"})			else:				fmsgcode = request.session.get('fmsgcode')				fmsgcode['status']=1				request.session['fmsgcode']=fmsgcode				return JsonResponse({'msg':1})		except Exception as e:			print(e)			return JsonResponse({'msg':0})def forgetpwd_3(request):	if request.method == 'POST':		fpwd = request.POST.get('fpwd','')		if (not fpwd) or len(fpwd) < 6 or tocheck_password(fpwd):			return JsonResponse({'msg':'密码最少为6位字母或数字且不能包含空格!'})		fuser = request.session.get('fmsgcode','')		print(fuser,'fuser')		if len(fuser) < 4:			return JsonResponse({'msg':'请求方式有误'})		else:			try:				fuser_obj = models.Users.objects.get(userid = fuser['userid'])				fuser_obj.password=make_password(fpwd, None, "pbkdf2_sha256")				fuser_obj.save(force_update=True)				return JsonResponse({'msg':1})			except Exception as e:				print(e)				return JsonResponse({'msg':'网络繁忙，请稍后重试'})def userlogout(request):	if request.method == 'POST':		user_id = request.POST.get('user_id','')		if not user_id:			return JsonResponse({'msg':0})		logout(request)		return JsonResponse({'msg':1})def tocheck_password(password):	for i in password:		if i.isspace():			return True	return False